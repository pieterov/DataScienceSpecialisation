text(5,-8,k, col="red")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
x_red <- seq(2,51,5)
for (k in 1:n_MedCons) {
#if ((k-1)/10 == round((k-1)/10)) {
#    y_axis <- "s"} else {
#        y_axis <- "n"
#    }
#if (k > 90) {
#    x_axis <- "s"} else {
#        x_axis <- "n"
#    }
plot(1:n_States,rc_of_data[k,], ylim=c(-10,10), xaxt="n", yaxt="n")
points(x_red, rc_of_data[k,x_red], col="red", pch=21, alpha=0.5)
abline(h=0, lty=3)
text(5,-8,k, col="red")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
x_red <- seq(2,51,5)
for (k in 1:n_MedCons) {
#if ((k-1)/10 == round((k-1)/10)) {
#    y_axis <- "s"} else {
#        y_axis <- "n"
#    }
#if (k > 90) {
#    x_axis <- "s"} else {
#        x_axis <- "n"
#    }
plot(1:n_States,rc_of_data[k,], ylim=c(-10,10), xaxt="n", yaxt="n")
points(x_red, rc_of_data[k,x_red], col="red", pch=20)
abline(h=0, lty=3)
text(5,-8,k, col="red")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
x_red <- seq(2,51,5)
for (k in 1:n_MedCons) {
#if ((k-1)/10 == round((k-1)/10)) {
#    y_axis <- "s"} else {
#        y_axis <- "n"
#    }
#if (k > 90) {
#    x_axis <- "s"} else {
#        x_axis <- "n"
#    }
plot(1:n_States, rc_of_data[k,], ylim=c(-10,10), xaxt="n", yaxt="n")
points(1:n_States, rc_of_data[k,], col=ifelse(rc_of_data[k,] < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(5,-8,k, col="red")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
x_red <- seq(2,51,5)
for (k in 1:n_MedCons) {
#if ((k-1)/10 == round((k-1)/10)) {
#    y_axis <- "s"} else {
#        y_axis <- "n"
#    }
#if (k > 90) {
#    x_axis <- "s"} else {
#        x_axis <- "n"
#    }
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(x < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(x<=0), col="red")
text(5,8, sum(x>0), col="green")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(x<=0), col="red")
text(5,8, sum(x>0), col="green")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0), col="red")
text(5,8, sum(y>0), col="green")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0 na.rm=TRUE), col="green")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
}
sum(c(12,3,4))
sum(c(12,3,4,na))
sum(c(12,3,4,NA))
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
title("test")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
main("test")
}
par(mfrow=c(10,10), oma=c(1,1,1,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("test", outer=TRUE)
}
par(mfrow=c(10,10), oma=c(1,1,2,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("test", outer=TRUE)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("test", outer=TRUE)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("test", outer=TRUE, line = 0)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("test", outer=TRUE, line = -20)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("test", outer=TRUE, line = -10)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("test", outer=TRUE, line = 2)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("test", outer=TRUE, line = 1)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Slope between ACC and ATP - yaxis range between -10 and 10", outer=TRUE, line = 1)
mtext("y-axis", outer=TRUE, srt=90)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Slope between ACC and ATP - yaxis range between -10 and 10", outer=TRUE, line = 1)
text("y-axis", outer=TRUE, srt=90)
}
par(mfrow=c(10,10), oma=c(1,1,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Slope between ACC and ATP - yaxis range between -10 and 10", outer=TRUE, line = 1)
mtext("y-axis", side=2, outer=TRUE, srt=90)
}
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers indicate number with pos and neg relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP - each chart ranging from -10 to 10", side=2, outer=TRUE, srt=90)
}
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers
indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP - each chart ranging from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
}
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Plot chart to png file
pdf("plot2.pdf")
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
# Plot chart to png file
pdf("plot2.pdf", paper="a4r")
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
# Plot chart to png file
pdf("plot2.pdf", paper="a4r", width = 10)
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
# Plot chart to png file
pdf("plot2.pdf", paper="a4r", width = 12)
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
# Plot chart to png file
pdf("plot2.pdf", paper="a4r", width = 12)
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
# Plot chart to png file
pdf("plot2.pdf", paper="a4r", width = 14)
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC and ATP for the 100 medical conditions (blue). The red and green numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC and ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
# Plot chart to png file
pdf("plot2.pdf", paper="a4r", width = 14)
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC ~ ATP for the 100 medical conditions (blue). Red and green numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC ~ ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
# Plot chart to png file
pdf("plot2.pdf", paper="a4r", width = 14)
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- rc_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC ~ ATP for the 100 medical conditions (blue). Green and red numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC ~ ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
number_of_data <- matrix(NA, nrow = n_MedCons, ncol = n_States)
rownames(number_of_data) <- MedCon_list
colnames(number_of_data) <- State_list
slope_of_data <- number_of_data
ic_of_data <- number_of_data
# Take subsets of the data and fit linear model of ACC against ATP
for (i in 1:n_MedCons) {
for (j in 1:n_States) {
ippsdata_subset <- subset(ippsdata, MedCon==MedCon_list[i] & State==State_list[j])
number_of_data[i,j] <- dim(ippsdata_subset)[1]
if (dim(ippsdata_subset)[1] > 1) {
z <- lm(ACC ~ ATP, data = ippsdata_subset)
ic_of_data[i,j] <- z[[1]][1]
slope_of_data[i,j] <- z[[1]][2]
}
}
}
# Plot chart to pdf file
pdf("plot2.pdf", paper="a4r", width = 14)
par(mfrow=c(10,10), oma=c(3,3,3,1), mar=c(0,0,0,0))
for (k in 1:n_MedCons) {
x <- 1:n_States
y <- slope_of_data[k,]
plot(x, y, ylim=c(-10,10), xaxt="n", yaxt="n")
points(x, y, col=ifelse(y < 0,'red','green'), pch=20)
abline(h=0, lty=3)
text(45,-8,k, col="blue")
text(5,-8, sum(y<=0, na.rm = TRUE), col="red")
text(5,8, sum(y>0, na.rm=TRUE), col="green")
mtext("Relation between ACC ~ ATP for the 100 medical conditions (blue). Green and red numbers indicate number of states with pos. and neg. relation.", outer=TRUE, line = 1)
mtext("Slope between ACC ~ ATP (linear fit) - each chart ranges from -10 to 10", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
}
# Close the graphical device
dev.off()
MedCon_list
MedCon_list[18]
MedCon_list[19]
MedCon_list[17]
MedCon_list[20]
MedCon_list[17:21]
MedCon_list[17:22]
MedCon_list[18:19]
a<-fread('https://d3c33hcgiwev3.cloudfront.net/_e143dff6e844c7af8da2a4e71d7c054d_payments.csv?Expires=1485907200&Signature=NhyW1ZZmyqs0R6rjgdqVniMl79iKN6Y~A1YvFkGm983vmVImnFbz1xKiIBLl1F6lkYeasM0H~Qx~RENS0-ND6CUeXt8PsQFOjtfvDPlbWuc4VLb9TAVRwJ7UNDOLoAnxGuR-bNBasm8gLhZqjopUm2m3YTKNBI2uy4n7pJ5zunw_&Key-Pair-Id=APKAJLTNE6QMUY6HBC5A')
library(data.table)
install.packages("data.table")
library(data.table)
a<-fread('https://d3c33hcgiwev3.cloudfront.net/_e143dff6e844c7af8da2a4e71d7c054d_payments.csv?Expires=1485907200&Signature=NhyW1ZZmyqs0R6rjgdqVniMl79iKN6Y~A1YvFkGm983vmVImnFbz1xKiIBLl1F6lkYeasM0H~Qx~RENS0-ND6CUeXt8PsQFOjtfvDPlbWuc4VLb9TAVRwJ7UNDOLoAnxGuR-bNBasm8gLhZqjopUm2m3YTKNBI2uy4n7pJ5zunw_&Key-Pair-Id=APKAJLTNE6QMUY6HBC5A')
head(a)
unique(a$DRG.Definition)
unique(a$Provider.State)
