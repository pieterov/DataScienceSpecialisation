tot_steps_pd_imp_NA <- aggregate(steps ~ date, fdata_imp_NA, sum, na.rm=TRUE)
# Loading and preprocessing the data
fdata_orig <- read.csv("activity.csv")
fdata_imp_NA <- fdata_orig
# What is mean tot no of steps taken per day?
tot_steps_pd_orig <- aggregate(steps ~ date, fdata_orig, sum, na.rm=TRUE)
hist(tot_steps_pd_orig$steps, col="red", xlab="Total steps per day (-)",
ylab="Frequency", main="Histogram - On most days (16 out of 53), 10,000 to 12,000 steps are taken.",
breaks=10, labels=TRUE)
mean_tot_steps_pd_orig <- mean(tot_steps_pd_orig$steps)
median_tot_steps_pd_orig <- median(tot_steps_pd_orig$steps)
# What is the average daily activity pattern?
avg_steps_per_interv_orig <- aggregate(steps ~ interval, fdata_orig, mean, na.rm=TRUE)
find_max_orig <- which.max(avg_steps_per_interv_orig$steps)
plot(avg_steps_per_interv_orig,type="l")
points(avg_steps_per_interv_orig[find_max_orig,],col="red", pch=19)
text(avg_steps_per_interv_orig$interval[find_max_orig]+50,avg_steps_per_interv_orig$steps[find_max_orig],
"The most active 5-min interval is the 104th interval, which is around 8:35AM.", adj=0)
# Imputting missing values.
# Total number of missing values in the dataset, i.e. the total number of rows with NA.
no_of_rows_w_NA <- sum(!complete.cases(fdata_orig))
# Replace all missing values in the steps column with the mean for that 5-minute interval.
# Create a new dataset that is equal to the original dataset but with the missing data filled in.
fdata_imp_NA$steps <- ifelse(is.na(fdata_imp_NA$steps),
avg_steps_per_interv_orig$steps[match(fdata_imp_NA$interv, avg_steps_per_interv_orig$interv)],
fdata_imp_NA$steps)
# Make a histogram of the tot number of steps taken each day.
tot_steps_pd_imp_NA <- aggregate(steps ~ date, fdata_imp_NA, sum, na.rm=TRUE)
hist(tot_steps_pd_imp_NA$steps, col="red", xlab="Total steps per day (-)",
ylab="Frequency", main="Histogram () - On most days (24 out of 61), 10,000 to 12,000 steps are taken.",
breaks=10, labels=TRUE)
# Calculate number of NA's per day - how are NA's distributed across days.
no_NA_pd <- lapply(split(fdata_orig,fdata_orig$date),
function (fdata_orig) {sum(is.na(fdata_orig$steps))})
table(as.numeric(no_NA_pd))
# Calculate and report the mean and median tot no of steps taken per day.
mean_tot_steps_pd_imp_NA <- mean(tot_steps_pd_imp_NA$steps)
median_tot_steps_pd_imp_NA <- median(tot_steps_pd_imp_NA$steps)
mean_tot_steps_pd_imp_NA
median_tot_steps_pd_imp_NA
median_tot_steps_pd_orig
mean_tot_steps_pd_orig
?mutate
library(dyplr)
library(dplyr)
?mutate
weekdays(fdata_imp_NA$date[1:3])
weekdays(fdata_imp_NA$date[1:3])
?weekdays
class(fdata_imp_NA$date)
as.Date.POSIXct(fdata_imp_NA$date)
as.Date.POSIXct(fdata_imp_NA$date[1:3])
weekdays(as.Date.POSIXct(fdata_imp_NA$date[1:3]))
fdata_imp_NA$date <- as.Date.POSIXct(fdata_imp_NA$date)
fdata_imp_NA$date %>% mutate(datetype = ifelse(as.Date.POSIXct(fdata_imp_NA$date) %in% c("Saturday","Sunday"),"Weekend","Weekday"))
fdata_imp_NA$daytype <- with(fdata_imp_NA, ifelse(as.Date.POSIXct(fdata_imp_NA$date) %in% c("Saturday","Sunday"),"Weekend","Weekday"))
head(fdata_imp_NA)
head(fdata_imp_NA,300)
fdata_imp_NA[600:610]
fdata_imp_NA[600:610,]
fdata_imp_NA[600:650,]
fdata_imp_NA[700:750,]
fdata_imp_NA[1700:1750,]
fdata_imp_NA[1700:1850,]
fdata_imp_NA[1700:2050,]
fdata_imp_NA[1700:2150,]
fdata_imp_NA[2000:2250,]
table(fdata_imp_NA$daytype)
as.Date.POSIXct(fdata_imp_NA$date[1:3]) %in% c("Saturday","Sunday")
as.Date.POSIXct(fdata_imp_NA$date[1:3])
weekdays(as.Date.POSIXct(fdata_imp_NA$date))
fdata_imp_NA$daytype <- with(fdata_imp_NA, ifelse(weekdays(as.Date.POSIXct(fdata_imp_NA$date)) %in% c("Saturday","Sunday"),"Weekend","Weekday"))
table(fdata_imp_NA$daytype)
weekdays(as.Date.POSIXct(fdata_imp_NA$date[1:3]))
weekdays(as.Date.POSIXct(fdata_imp_NA$date[288*1:288*(1+1)]))
weekdays(as.Date.POSIXct(fdata_imp_NA$date[288:288*2]))
weekdays(as.Date.POSIXct(fdata_imp_NA$date[288:500]))
weekdays(as.Date.POSIXct(fdata_imp_NA$date[500:700]))
weekdays(as.Date.POSIXct(fdata_imp_NA$date[700:900]))
weekdays(as.Date.POSIXct(fdata_imp_NA$date[900:1100]))
as.Date.POSIXct(fdata_imp_NA$date[900:1100])
fdata_imp_NA$date[900:1100]
table(fdata_imp_NA$date)
rm(list=ls())
# Loading and preprocessing the data
fdata_orig <- read.csv("activity.csv")
fdata_imp_NA <- fdata_orig
# What is mean total number of steps taken per day?
tot_steps_pd_orig <- aggregate(steps ~ date, fdata_orig, sum, na.rm=TRUE)
hist(tot_steps_pd_orig$steps, col="red", xlab="Total steps per day (-)",
ylab="Frequency", main="Histogram - On most days (16 out of 53), 10,000 to 12,000 steps are taken.",
breaks=10, labels=TRUE)
mean_tot_steps_pd_orig <- mean(tot_steps_pd_orig$steps)
median_tot_steps_pd_orig <- median(tot_steps_pd_orig$steps)
# What is the average daily activity pattern?
avg_steps_per_interv_orig <- aggregate(steps ~ interval, fdata_orig, mean, na.rm=TRUE)
find_max_orig <- which.max(avg_steps_per_interv_orig$steps)
plot(avg_steps_per_interv_orig,type="l")
points(avg_steps_per_interv_orig[find_max_orig,],col="red", pch=19)
text(avg_steps_per_interv_orig$interval[find_max_orig]+50,avg_steps_per_interv_orig$steps[find_max_orig],
"The most active 5-min interval is the 104th interval, which is around 8:35AM.", adj=0)
# Imputting missing values.
# Total number of missing values in the dataset, i.e. the total number of rows with NA.
no_of_rows_w_NA <- sum(!complete.cases(fdata_orig))
# Replace all missing values in the steps column with the mean for that 5-minute interval.
# Create a new dataset that is equal to the original dataset but with the missing data filled in.
fdata_imp_NA$steps <- ifelse(is.na(fdata_imp_NA$steps),
avg_steps_per_interv_orig$steps[match(fdata_imp_NA$interv, avg_steps_per_interv_orig$interv)],
fdata_imp_NA$steps)
# Make a histogram of the tot number of steps taken each day.
tot_steps_pd_imp_NA <- aggregate(steps ~ date, fdata_imp_NA, sum, na.rm=TRUE)
hist(tot_steps_pd_imp_NA$steps, col="red", xlab="Total steps per day (-)",
ylab="Frequency", main="Histogram () - On most days (24 out of 61), 10,000 to 12,000 steps are taken.",
breaks=10, labels=TRUE)
# Calculate number of NA's per day - how are NA's distributed across days.
no_NA_pd <- lapply(split(fdata_orig,fdata_orig$date),
function (fdata_orig) {sum(is.na(fdata_orig$steps))})
table(as.numeric(no_NA_pd))
# Calculate and report the mean and median tot no of steps taken per day.
mean_tot_steps_pd_imp_NA <- mean(tot_steps_pd_imp_NA$steps)
median_tot_steps_pd_imp_NA <- median(tot_steps_pd_imp_NA$steps)
fdata_imp_NA$daytype <- with(fdata_imp_NA, ifelse(weekdays(as.Date.POSIXct(fdata_imp_NA$date)) %in% c("Saturday","Sunday"),"Weekend","Weekday"))
table(fdata_imp_NA$daytype)
table(fdata_imp_NA$date)
table(as.Date.POSIXct(fdata_imp_NA$date))
class(fdata_imp_NA$date)
table(as.Date(fdata_imp_NA$date, format="%Y-%m-%d"))
table(weekdays(as.Date(fdata_imp_NA$date, format="%Y-%m-%d")))
fdata_imp_NA$daytype <- with(fdata_imp_NA, ifelse(weekdays(as.Date(fdata_imp_NA$date, format="%Y-%m-%d")) %in% c("Saturday","Sunday"),"Weekend","Weekday"))
table(fdata_imp_NA$daytype)
12960+4608
5*2592
avg_steps_per_interv_imp_NA_weekday <- aggregate(steps ~ interval, fdata_imp_NA[fdata_imp_NA$daytype=="Weekday",], FUN=mean)
avg_steps_per_interv_imp_NA_weekday <- aggregate(steps ~ interval,
fdata_imp_NA[fdata_imp_NA$daytype=="Weekday",],
FUN=mean)
avg_steps_per_interv_imp_NA_weekend <- aggregate(steps ~ interval,
fdata_imp_NA[fdata_imp_NA$daytype=="Weekend",],
FUN=mean)
par(mfrow=c(2,1), oma=c(3,3,3,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday,type="l")
plot(avg_steps_per_interv_imp_NA_weekend,type="l")
fdata_imp_NA$weekday <- with(fdata_imp_NA, weekdays(as.Date(fdata_imp_NA$date, format="%Y-%m-%d")))
table(fdata_imp_NA$weekday)
avg_steps_per_interv_imp_NA_Saturday <- aggregate(steps ~ interval,
fdata_imp_NA[fdata_imp_NA$weekday=="Saturday",],
FUN=mean)
avg_steps_per_interv_imp_NA_Sunday <- aggregate(steps ~ interval,
fdata_imp_NA[fdata_imp_NA$weekday=="Sunday",],
FUN=mean)
par(mfrow=c(4,1), oma=c(3,3,3,1)) #, mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday,type="l")
plot(avg_steps_per_interv_imp_NA_weekend,type="l")
plot(avg_steps_per_interv_imp_NA_Saturday,type="l")
plot(avg_steps_per_interv_imp_NA_Sunday,type="l")
par(mfrow=c(4,1), oma=c(3,3,3,1)) #, mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l")
plot(avg_steps_per_interv_imp_NA_Saturday, ylim=c(0,250), type="l")
plot(avg_steps_per_interv_imp_NA_Sunday, ylim=c(0,250), type="l")
avg_steps_per_interv_imp_NA_weekend[800]
avg_steps_per_interv_imp_NA_weekend[800,]
avg_steps_per_interv_imp_NA_weekend
avg_steps_per_interv_imp_NA_weekend[104,]
avg_steps_per_interv_imp_NA_Saturday[104,]
avg_steps_per_interv_imp_NA_Sunday[104,]
(114+162)/2
par(mfrow=c(2,1), oma=c(3,3,3,1)) #, mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l")
lines(avg_steps_per_interv_imp_NA_Saturday, ylim=c(0,250), type="l",col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, ylim=c(0,250), type="l", col="blue")
par(mfrow=c(2,1), oma=c(3,3,3,1)) #, mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l")
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
par(mfrow=c(2,1), oma=c(3,3,3,1)) #, mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l")
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
?plot
?lines
?plot
?lwd
par(mfrow=c(2,1), oma=c(3,3,3,1)) #, mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
par(mfrow=c(2,1), oma=c(3,3,3,1)) #, mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l", lwd=3)
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
par(mfrow=c(2,1), oma=c(3,3,3,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l", lwd=3)
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
par(mfrow=c(2,1), oma=c(3,3,3,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l", lwd=3)
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
par(mfrow=c(2,1), oma=c(5,3,3,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l", lwd=3)
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l", lwd=3)
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, ylim=c(0,250), type="l", lwd=3)
text(0, 200, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(0, 200, "Weekend")
head(avg_steps_per_interv_imp_NA_weekend)
tail(avg_steps_per_interv_imp_NA_weekend)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xline = c(0,2400), ylim=c(0,250), type="l", lwd=3)
text(0, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(0, 150, "Weekend")
mtext("In weekdays most action is around 8:30AM, where in weekends the profile is flatter.", outer=TRUE, line = 1)
mtext("Average number of steps per 5 min time interval", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xline = c(0,300,600,2400), ylim=c(0,250), type="l", lwd=3)
text(0, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(0, 150, "Weekend")
mtext("In weekdays most action is around 8:30AM, where in weekends the profile is flatter.", outer=TRUE, line = 1)
mtext("Average number of steps per 5 min time interval", side=2, line=1, outer=TRUE, srt=90)
mtext("States - each chart ranges from state 1 to 51", side=1, line=1, outer=TRUE)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(0, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(0, 150, "Weekend")
seq(0,10,2)
seq(0,2355,30)
seq(0,2400,30)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(0, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, xaxt="n", ylim=c(0,250), type="l", lwd=3)
axis(side = 1, at = seq(0,2400,30))
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(0, 150, "Weekend")
fdata_imp_NA$interval
fdata_imp_NA$interval[1:10]
?sprintf
sprintf("%f",pi)
sprintf("%04d",pi)
sprintf("%04d",5)
sprintf("%04d",67)
sprintf("%04d",670)
sprintf("%04d",6700)
sprintf("%04d",67000)
format(strptime(sprintf("%04d",67), format="%H%M"), format = "%H:%M")
format(strptime(sprintf("%04d",5), format="%H%M"), format = "%H:%M")
class(format(strptime(sprintf("%04d",5), format="%H%M"), format = "%H:%M"))
format(strptime(sprintf("%04d",5), format="%H%M"), format = "%H:%M")
as.POSIXct(strptime(sprintf("%04d",5), format="%H%M"), format = "%H:%M")
install.packages("chron")
library(chron)
library(chron)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(0, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, xaxt="n", ylim=c(0,250), type="l", lwd=3)
axis(side = 1, at = seq(0,2400,30))
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(0, 150, "Weekend")
mtext("In weekdays most action is around 8:30AM, where in weekends the profile is flatter.", outer=TRUE, line = 1)
mtext("Average number of steps per 5 min time interval", side=2, line=1, outer=TRUE, srt=90)
mtext("Time Interval (0:00 - 23:55 hours)", side=1, line=1, outer=TRUE)
mtext("Time Interval (0:00 - 23:55 hours)", side=1, line=2, outer=TRUE)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(0, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, xaxt="n", ylim=c(0,250), type="l", lwd=3)
axis(side = 1, at = seq(0,2400,30))
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(0, 150, "Weekend")
mtext("In weekdays most action is around 8:30AM, where in weekends the profile is flatter.", outer=TRUE, line = 1)
mtext("Average number of steps per 5 min time interval", side=2, line=3, outer=TRUE, srt=90)
mtext("Time Interval (0:00 - 23:55 hours)", side=1, line=3, outer=TRUE)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(150, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, xaxt="n", ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(150, 150, "Weekend")
mtext("In weekdays most action is around 8:30AM, where in weekends the profile is flatter.", outer=TRUE, line = 1)
mtext("Average number of steps per 5 min time interval", side=2, line=3, outer=TRUE, srt=90)
mtext("Time Interval (0:00 - 23:55 hours)", side=1, line=3, outer=TRUE)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(150, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(150, 150, "Weekend")
mtext("In weekdays most action is around 8:30AM, where in weekends the profile is flatter.", outer=TRUE, line = 1)
mtext("Average number of steps per 5 min time interval", side=2, line=3, outer=TRUE, srt=90)
mtext("Time Interval (0:00 - 23:55 hours)", side=1, line=3, outer=TRUE)
abline(v=830)
abline(v=1000)
abline(v=850)
abline(v=855)
abline(v=865)
abline(v=8707)
abline(v=870)
abline(v=890)
head(avg_steps_per_interv_imp_NA_weekend)
head(avg_steps_per_interv_imp_NA_weekend,20)
avg_steps_per_interv_imp_NA_weekend$interval<-sprintf("%04d",avg_steps_per_interv_imp_NA_weekend$interval)
head(avg_steps_per_interv_imp_NA_weekend,20)
?chron
?strftime
avg_steps_per_interv_imp_NA_weekend$interval<-format(strptime(sprintf("%04d",avg_steps_per_interv_imp_NA_weekend$interval), format="%H%M"),format = "%H:%M")
d1 <- sprintf("%04d",avg_steps_per_interv_imp_NA_weekend$interval)
d1 <- sprintf("%04d", as.numeric(avg_steps_per_interv_imp_NA_weekend$interval))
d2 <- format(strptime(d1, format="%H%M"), format = "%H:%M")
class(d2)
d3 <- chron(times=d2)
d2 <- paste0(format(strptime(d1, format="%H%M"), format = "%H:%M"),":00")
d3 <- chron(times=d2)
class(d3)
d3
avg_steps_per_interv_imp_NA_weekend$interval<-d3
head(avg_steps_per_interv_imp_NA_weekend)
plot(avg_steps_per_interv_imp_NA_weekend)
plot(avg_steps_per_interv_imp_NA_weekend,type="l")
plot(avg_steps_per_interv_imp_NA_weekend,type="l")
d3 <- as.POSIXct(d2)
d3 <- as.POSIXct(d2,format="%H:%M:%S")
avg_steps_per_interv_imp_NA_weekend$interval<-d3
head(avg_steps_per_interv_imp_NA_weekend)
plot(avg_steps_per_interv_imp_NA_weekend,type="l")
d3 <- strptime(as.POSIXct(d2,format="%H:%M:%S"))
d3 <- strptime(as.POSIXct(d2,format="%H:%M:%S"),"%H:%M")
avg_steps_per_interv_imp_NA_weekend$interval<-d3
plot(avg_steps_per_interv_imp_NA_weekend,type="l")
head(avg_steps_per_interv_imp_NA_weekend)
d3 <- strptime(as.POSIXct(d2,format="%Y-%m-%d %H:%M:%S"),"%H:%M")
d3[1:3]
d2[1:3]
fdata_orig <- read.csv("activity.csv")
d1 <- sprintf("%04d", as.numeric(fdata_orig$interval))
d2 <- format(strptime(d1, format="%H%M"), format = "%H:%M")
d3 <- as.POSIXct(d2, format="%H:%M")
fdata_orig$interval <- d3
head(fdata_orig)
fdata_orig <- read.csv("activity.csv")
d1 <- sprintf("%04d", as.numeric(fdata_orig$interval))
d2 <- format(strptime(d1, format="%H%M"), format = "%H:%M")
d3 <- as.POSIXct(d2, format="%H:%M")
fdata_orig$interval <- d3
fdata_imp_NA <- fdata_orig
# What is mean total number of steps taken per day?
tot_steps_pd_orig <- aggregate(steps ~ date, fdata_orig, sum, na.rm=TRUE)
hist(tot_steps_pd_orig$steps, col="red", xlab="Total steps per day (-)",
ylab="Frequency", main="Histogram - On most days (16 out of 53), 10,000 to 12,000 steps are taken.",
breaks=10, labels=TRUE)
mean_tot_steps_pd_orig <- mean(tot_steps_pd_orig$steps)
median_tot_steps_pd_orig <- median(tot_steps_pd_orig$steps)
# What is the average daily activity pattern?
avg_steps_per_interv_orig <- aggregate(steps ~ interval, fdata_orig, mean, na.rm=TRUE)
find_max_orig <- which.max(avg_steps_per_interv_orig$steps)
plot(avg_steps_per_interv_orig,type="l")
points(avg_steps_per_interv_orig[find_max_orig,],col="red", pch=19)
text(avg_steps_per_interv_orig$interval[find_max_orig]+50,avg_steps_per_interv_orig$steps[find_max_orig],
"The most active 5-min interval is the 104th interval, which is around 8:35AM.", adj=0)
# Imputting missing values.
# Total number of missing values in the dataset, i.e. the total number of rows with NA.
no_of_rows_w_NA <- sum(!complete.cases(fdata_orig))
# Replace all missing values in the steps column with the mean for that 5-minute interval.
# Create a new dataset that is equal to the original dataset but with the missing data filled in.
fdata_imp_NA$steps <- ifelse(is.na(fdata_imp_NA$steps),
avg_steps_per_interv_orig$steps[match(fdata_imp_NA$interv, avg_steps_per_interv_orig$interv)],
fdata_imp_NA$steps)
# Make a histogram of the tot number of steps taken each day.
tot_steps_pd_imp_NA <- aggregate(steps ~ date, fdata_imp_NA, sum, na.rm=TRUE)
hist(tot_steps_pd_imp_NA$steps, col="red", xlab="Total steps per day (-)",
ylab="Frequency", main="Histogram () - On most days (24 out of 61), 10,000 to 12,000 steps are taken.",
breaks=10, labels=TRUE)
# Calculate number of NA's per day - how are NA's distributed across days.
no_NA_pd <- lapply(split(fdata_orig,fdata_orig$date),
function (fdata_orig) {sum(is.na(fdata_orig$steps))})
table(as.numeric(no_NA_pd))
# Calculate and report the mean and median tot no of steps taken per day.
mean_tot_steps_pd_imp_NA <- mean(tot_steps_pd_imp_NA$steps)
median_tot_steps_pd_imp_NA <- median(tot_steps_pd_imp_NA$steps)
# Do these values differ from the estimates from the first part of the assignment?
# What is the impact of imputing missing data on the estimates of the total daily number of steps?
# Are there differences in activity patterns between weekdays and weekends?
fdata_imp_NA$weekday <- with(fdata_imp_NA, weekdays(as.Date(fdata_imp_NA$date, format="%Y-%m-%d")))
fdata_imp_NA$daytype <- with(fdata_imp_NA, ifelse(fdata_imp_NA$weekday %in% c("Saturday","Sunday"),
"Weekend",
"Weekday"))
avg_steps_per_interv_imp_NA_weekday <- aggregate(steps ~ interval,
fdata_imp_NA[fdata_imp_NA$daytype=="Weekday",],
FUN=mean)
avg_steps_per_interv_imp_NA_weekend <- aggregate(steps ~ interval,
fdata_imp_NA[fdata_imp_NA$daytype=="Weekend",],
FUN=mean)
avg_steps_per_interv_imp_NA_Saturday <- aggregate(steps ~ interval,
fdata_imp_NA[fdata_imp_NA$weekday=="Saturday",],
FUN=mean)
avg_steps_per_interv_imp_NA_Sunday <- aggregate(steps ~ interval,
fdata_imp_NA[fdata_imp_NA$weekday=="Sunday",],
FUN=mean)
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(150, 150, "Weekdays")
plot(avg_steps_per_interv_imp_NA_weekend, ylim=c(0,250), type="l", lwd=3)
lines(avg_steps_per_interv_imp_NA_Saturday, col="red")
lines(avg_steps_per_interv_imp_NA_Sunday, col="blue")
text(150, 150, "Weekend")
mtext("In weekdays most action is around 8:30AM, where in weekends the profile is flatter.", outer=TRUE, line = 1)
mtext("Average number of steps per 5 min time interval", side=2, line=3, outer=TRUE, srt=90)
mtext("Time Interval (0:00 - 23:55 hours)", side=1, line=3, outer=TRUE)
avg_steps_per_interv_imp_NA_Saturday$interval[104]
abline(v="2017-02-04 08:35:00 CET")
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[104])
avg_steps_per_interv_imp_NA_Saturday$interval[103]
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[100])
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[110])
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[120])
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[115])
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[112])
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[112],lty=3)
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[125],lty=3)
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[125],lty=3,lwd=3)
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[125],lty=3,lwd=3,col="grey")
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[125],lty=3,lwd=3,col="grey40")
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[135],lty=3,lwd=3,col="grey40")
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(150, 150, "Weekdays")
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[c(100,115)],lty=3,lwd=3,col="grey40")
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(150, 150, "Weekdays")
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[c(90,105)],lty=3,lwd=3,col="grey40")
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(150, 150, "Weekdays")
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[c(100,105)],lty=3,lwd=3,col="grey40")
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(150, 150, "Weekdays")
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[c(99,105)],lty=3,lwd=3,col="grey40")
par(mfrow=c(2,1), oma=c(5,5,5,1), mar=c(0,0,0,0))
plot(avg_steps_per_interv_imp_NA_weekday, xaxt="n", ylim=c(0,250), type="l", lwd=3)
text(150, 150, "Weekdays")
abline(v=avg_steps_per_interv_imp_NA_Saturday$interval[c(98,110)],lty=3,lwd=3,col="grey40")
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
avg_steps_per_interv_imp_NA_Saturday$interval[c(98,114)]
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
avg_steps_per_interv_imp_NA_Saturday$interval[c(98,112)]
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
avg_steps_per_interv_imp_NA_Saturday$interval[c(100,116)]
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
hist(tot_steps_pd_imp_NA$steps, col="red", xlab="Total steps per day (-)",
ylab="Frequency", main="Histogram () - On most days (24 out of 61), 10,000 to 12,000 steps are taken.",
breaks=10, labels=TRUE)
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
source('~/Documents/Github Repos/DataScienceSpecialisation/5. Reproducible Research/Week 2/ExploratoryAnalysis - v1.R')
